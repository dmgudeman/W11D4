{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware, compose } from \"redux\";\nconst rootReducer = combineReducers({});\nlet enhancer;\n\nif (process.env.NODE_ENV !== \"production\") {\n  const logger = require(\"redux-logger\").default;\n\n  const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n  enhancer = composeEnhancers(applyMiddleware(logger));\n}\n\nconst configureStore = preloadedState => {\n  return createStore(rootReducer, preloadedState, enhancer);\n};\n\nexport default configureStore;","map":{"version":3,"names":["createStore","combineReducers","applyMiddleware","compose","rootReducer","enhancer","process","env","NODE_ENV","logger","require","default","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","configureStore","preloadedState"],"sources":["/Users/appacademy/W11D4/W11D4/practice-for-week-15-react-redux-grocery-store-long-practice/src/store/index.js"],"sourcesContent":["import { createStore, combineReducers, applyMiddleware, compose } from \"redux\";\n\n\nconst rootReducer =combineReducers({\n  \n});\n\nlet enhancer;\n\nif (process.env.NODE_ENV !== \"production\") {\n  const logger = require(\"redux-logger\").default;\n  const composeEnhancers =\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n  enhancer = composeEnhancers(applyMiddleware(logger));\n}\n\nconst configureStore = (preloadedState) => {\n    return createStore(rootReducer, preloadedState, enhancer);\n  };\n  \n  export default configureStore;"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,EAAwDC,OAAxD,QAAuE,OAAvE;AAGA,MAAMC,WAAW,GAAEH,eAAe,CAAC,EAAD,CAAlC;AAIA,IAAII,QAAJ;;AAEA,IAAIC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;EACzC,MAAMC,MAAM,GAAGC,OAAO,CAAC,cAAD,CAAP,CAAwBC,OAAvC;;EACA,MAAMC,gBAAgB,GACpBC,MAAM,CAACC,oCAAP,IAA+CX,OADjD;EAEAE,QAAQ,GAAGO,gBAAgB,CAACV,eAAe,CAACO,MAAD,CAAhB,CAA3B;AACD;;AAED,MAAMM,cAAc,GAAIC,cAAD,IAAoB;EACvC,OAAOhB,WAAW,CAACI,WAAD,EAAcY,cAAd,EAA8BX,QAA9B,CAAlB;AACD,CAFH;;AAIE,eAAeU,cAAf"},"metadata":{},"sourceType":"module"}