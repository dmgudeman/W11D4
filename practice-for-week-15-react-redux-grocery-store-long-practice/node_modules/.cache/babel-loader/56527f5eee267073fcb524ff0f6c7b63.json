{"ast":null,"code":"import produceData from '../mockData/produce.json';\nconst POPULATE = \"produce/POPULATE\";\nexport default function produceReducer() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case POPULATE:\n      newObject = {};\n      action.produce.forEach(produce => {\n        newObject[produce.id] = produce;\n      });\n      return newObject;\n\n    default:\n      return state;\n  }\n}\nexport function populateProduce() {\n  return {\n    type: POPULATE,\n    produce: produceData\n  };\n}","map":{"version":3,"names":["produceData","POPULATE","produceReducer","state","action","type","newObject","produce","forEach","id","populateProduce"],"sources":["/Users/appacademy/W11D4/W11D4/practice-for-week-15-react-redux-grocery-store-long-practice/src/store/produce.js"],"sourcesContent":["import produceData from '../mockData/produce.json';\nconst POPULATE = \"produce/POPULATE\"\n\nexport default function produceReducer(state = {}, action) {\n    switch (action.type) {\n        case POPULATE:\n            newObject = {}\n            action.produce.forEach((produce)=>{\n                newObject[produce.id]=produce;\n            })\n            return newObject;\n        default:\n            return state;\n\n    }\n}\n\nexport function populateProduce() {\n\n    return {\n       type: POPULATE,\n       produce: produceData\n    }\n\n}"],"mappings":"AAAA,OAAOA,WAAP,MAAwB,0BAAxB;AACA,MAAMC,QAAQ,GAAG,kBAAjB;AAEA,eAAe,SAASC,cAAT,GAA4C;EAAA,IAApBC,KAAoB,uEAAZ,EAAY;EAAA,IAARC,MAAQ;;EACvD,QAAQA,MAAM,CAACC,IAAf;IACI,KAAKJ,QAAL;MACIK,SAAS,GAAG,EAAZ;MACAF,MAAM,CAACG,OAAP,CAAeC,OAAf,CAAwBD,OAAD,IAAW;QAC9BD,SAAS,CAACC,OAAO,CAACE,EAAT,CAAT,GAAsBF,OAAtB;MACH,CAFD;MAGA,OAAOD,SAAP;;IACJ;MACI,OAAOH,KAAP;EARR;AAWH;AAED,OAAO,SAASO,eAAT,GAA2B;EAE9B,OAAO;IACJL,IAAI,EAAEJ,QADF;IAEJM,OAAO,EAAEP;EAFL,CAAP;AAKH"},"metadata":{},"sourceType":"module"}